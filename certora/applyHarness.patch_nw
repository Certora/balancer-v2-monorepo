diff -ruN pool-stable/contracts/ComposableStablePool.sol pool-stable/contracts/ComposableStablePool.sol
--- pool-stable/contracts/ComposableStablePool.sol	2022-08-12 15:59:19.655994600 -0400
+++ pool-stable/contracts/ComposableStablePool.sol	2022-08-12 18:58:40.702950200 -0400
@@ -25,16 +25,14 @@
 import "@balancer-labs/v2-solidity-utils/contracts/helpers/ERC20Helpers.sol";
 import "@balancer-labs/v2-solidity-utils/contracts/helpers/InputHelpers.sol";
 
-import "@balancer-labs/v2-pool-utils/contracts/BaseGeneralPool.sol";
+import "../../pool-utils/contracts/BaseGeneralPool.sol";
 import "@balancer-labs/v2-pool-utils/contracts/rates/PriceRateCache.sol";
 
 import "./ComposableStablePoolStorage.sol";
 import "./ComposableStablePoolRates.sol";
-import "./ComposableStablePoolStorage.sol";
-import "./ComposableStablePoolRates.sol";
 import "./ComposableStablePoolProtocolFees.sol";
 import "./StablePoolAmplification.sol";
-import "./StableMath.sol";
+import "../../../harnesses/StableMathHarness.sol";
 
 /**
  * @dev StablePool with preminted BPT and rate providers for each token, allowing for e.g. wrapped tokens with a known
diff -ruN pool-stable/contracts/ComposableStablePoolProtocolFees.sol pool-stable/contracts/ComposableStablePoolProtocolFees.sol
--- pool-stable/contracts/ComposableStablePoolProtocolFees.sol	2022-08-12 15:59:19.690468300 -0400
+++ pool-stable/contracts/ComposableStablePoolProtocolFees.sol	2022-08-12 18:25:51.520004600 -0400
@@ -21,7 +21,7 @@
 
 import "./ComposableStablePoolStorage.sol";
 import "./ComposableStablePoolRates.sol";
-import "./StableMath.sol";
+import "../../../harnesses/StableMathHarness.sol";
 
 abstract contract ComposableStablePoolProtocolFees is
     ComposableStablePoolStorage,
diff -ruN pool-stable/contracts/ComposableStablePoolStorage.sol pool-stable/contracts/ComposableStablePoolStorage.sol
--- pool-stable/contracts/ComposableStablePoolStorage.sol	2022-08-12 15:59:19.725081600 -0400
+++ pool-stable/contracts/ComposableStablePoolStorage.sol	2022-08-12 18:25:56.627630700 -0400
@@ -20,7 +20,7 @@
 
 import "@balancer-labs/v2-pool-utils/contracts/BasePool.sol";
 
-import "./StableMath.sol";
+import "../../../harnesses/StableMathHarness.sol";
 
 abstract contract ComposableStablePoolStorage is BasePool {
     using FixedPoint for uint256;
@@ -44,12 +44,12 @@
     uint256 private immutable _bptIndex;
 
     // These are the registered tokens: one of them will be the BPT.
-    IERC20 private immutable _token0;
-    IERC20 private immutable _token1;
-    IERC20 private immutable _token2;
-    IERC20 private immutable _token3;
-    IERC20 private immutable _token4;
-    IERC20 private immutable _token5;
+    IERC20 internal immutable _token0;
+    IERC20 internal immutable _token1;
+    IERC20 internal immutable _token2;
+    IERC20 internal immutable _token3;
+    IERC20 internal immutable _token4;
+    IERC20 internal immutable _token5;
 
     // All token balances are normalized to behave as if the token had 18 decimals. We assume a token's decimals will
     // not change throughout its lifetime, and store the corresponding scaling factor for each at construction time.
diff -ruN pool-stable/contracts/StablePoolAmplification.sol pool-stable/contracts/StablePoolAmplification.sol
--- pool-stable/contracts/StablePoolAmplification.sol	2022-08-12 15:59:19.765081000 -0400
+++ pool-stable/contracts/StablePoolAmplification.sol	2022-08-12 18:26:03.342006900 -0400
@@ -17,7 +17,7 @@
 import "@balancer-labs/v2-pool-utils/contracts/BasePoolAuthorization.sol";
 import "@balancer-labs/v2-solidity-utils/contracts/helpers/WordCodec.sol";
 
-import "./StableMath.sol";
+import "../../../harnesses/StableMathHarness.sol";
 
 abstract contract StablePoolAmplification is BasePoolAuthorization {
     using WordCodec for bytes32;
diff -ruN pool-stable/contracts/test/MockStableMath.sol pool-stable/contracts/test/MockStableMath.sol
--- pool-stable/contracts/test/MockStableMath.sol	2022-08-12 15:59:19.856079800 -0400
+++ pool-stable/contracts/test/MockStableMath.sol	2022-08-12 18:26:07.993335200 -0400
@@ -14,7 +14,7 @@
 
 pragma solidity ^0.7.0;
 
-import "../StableMath.sol";
+import "../../../harnesses/StableMathHarness.sol";
 
 contract MockStableMath {
     function invariant(uint256 amp, uint256[] memory balances) external pure returns (uint256) {
diff -ruN pool-utils/contracts/BasePool.sol pool-utils/contracts/BasePool.sol
--- pool-utils/contracts/BasePool.sol	2022-08-12 15:59:20.079978100 -0400
+++ pool-utils/contracts/BasePool.sol	2022-08-12 18:35:40.882852100 -0400
@@ -299,7 +299,7 @@
         uint256 lastChangeBlock,
         uint256 protocolSwapFeePercentage,
         bytes memory userData
-    ) external override onlyVault(poolId) returns (uint256[] memory, uint256[] memory) {
+    ) public override onlyVault(poolId) returns (uint256[] memory, uint256[] memory) {
         _beforeSwapJoinExit();
 
         uint256[] memory scalingFactors = _scalingFactors();
@@ -361,7 +361,7 @@
         uint256 lastChangeBlock,
         uint256 protocolSwapFeePercentage,
         bytes memory userData
-    ) external override onlyVault(poolId) returns (uint256[] memory, uint256[] memory) {
+    ) public override onlyVault(poolId) returns (uint256[] memory, uint256[] memory) {
         uint256[] memory amountsOut;
         uint256 bptAmountIn;