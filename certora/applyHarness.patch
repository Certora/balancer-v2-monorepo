diff -ruN .gitignore .gitignore
--- .gitignore	1969-12-31 16:00:00.000000000 -0800
+++ .gitignore	2022-08-12 14:56:11.000000000 -0700
@@ -0,0 +1,2 @@
+*
+!.gitignore
\ No newline at end of file
diff -ruN pool-stable/contracts/StablePool.sol pool-stable/contracts/StablePool.sol
--- pool-stable/contracts/StablePool.sol	2022-06-20 21:05:13.000000000 -0700
+++ pool-stable/contracts/StablePool.sol	2022-08-12 15:10:08.000000000 -0700
@@ -420,7 +420,7 @@
         uint256[] memory balances,
         uint256[] memory scalingFactors,
         bytes memory userData
-    ) private view returns (uint256, uint256[] memory) {
+    ) internal view returns (uint256, uint256[] memory) { // MUNGED private => internal
         StablePoolUserData.ExitKind kind = userData.exitKind();
 
         if (kind == StablePoolUserData.ExitKind.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT) {
@@ -682,7 +682,7 @@
         precision = StableMath._AMP_PRECISION;
     }
 
-    function _getAmplificationParameter() internal view returns (uint256 value, bool isUpdating) {
+    function _getAmplificationParameter() public view returns (uint256 value, bool isUpdating) { // HARNESS: changed to public
         (uint256 startValue, uint256 endValue, uint256 startTime, uint256 endTime) = _getAmplificationData();
 
         // Note that block.timestamp >= startTime, since startTime is set to the current time when an update starts
diff -ruN pool-utils/contracts/BasePool.sol pool-utils/contracts/BasePool.sol
--- pool-utils/contracts/BasePool.sol	2022-08-05 17:23:33.000000000 -0700
+++ pool-utils/contracts/BasePool.sol	2022-08-12 14:56:11.000000000 -0700
@@ -631,7 +631,7 @@
      * @dev Same as `_downscaleUp`, but for an entire array. This function does not return anything, but instead
      * *mutates* the `amounts` array.
      */
-        function _downscaleUpArray(uint256[] memory amounts, uint256[] memory scalingFactors) internal view {
+    function _downscaleUpArray(uint256[] memory amounts, uint256[] memory scalingFactors) internal view {
         for (uint256 i = 0; i < _getTotalTokens(); ++i) {
             amounts[i] = FixedPoint.divUp(amounts[i], scalingFactors[i]);
         }
